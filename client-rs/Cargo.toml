[package]
name = "nimplant-rs"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

# Opsec tips from:
## https://github.com/trickster0/OffensiveRust/blob/master/cargo.toml
## https://github.com/johnthagen/min-sized-rust

# Make sure to switch to the nightly build chain
## rustup default nightly

# and add the following to your ~/.cargo/config.toml:
## [build]
## rustflags = ["--remap-path-prefix", "C:\\Users\\YOUR_USERNAME=~", "-Zlocation-detail=none"]

[profile.release]
opt-level = "z"
lto = true
strip = true
codegen-units = 1
panic = "abort"

# We still optimize for size in debug mode,
# because the MingW target results in crazy 
# large debug binaries otherwise
[profile.dev]
opt-level = "z"
split-debuginfo = "packed"
strip = true

[lib]
name = "nimplant"
crate-type = ["cdylib"]

[[bin]]
name = "nimplant"
path = "src/main.rs"

[features]
risky = [
    "clroxide",
    "dinvoke_rs",
    "goblin",
    "printf-compat",
    "widestring",
    "windows",
    "once_cell",
]

[build-dependencies]
bincode = "1.3.3"
serde = { version = "1.0.163", features = ["derive"] }
serde_derive = "1.0.163"
toml = "0.8.10"

[dependencies]
aes = "0.8.3"
base64 = "0.22.0"
bincode = "1.3.3"
chrono = "0.4.31"
clroxide = { version = "1.1.1", optional = true }
ctr = "0.9.2"
dinvoke_rs = { version = "0.1.5", optional = true }
flate2 = "1.0.28"
fmtools = { version = "0.1.2", features = ["obfstr"] }
goblin = { version = "0.8.2", optional = true, features = ["alloc"] }
image = { version = "0.25.0", features = ["png"] }
libloading = "0.8.1"
local-ip-address = "0.6.0"
microkv = "0.2.9"
once_cell = { version = "1.19.0", optional = true }
printf-compat = { version = "0.1.1", optional = true }
rand = "0.8.5"
serde = { version = "1.0.163", features = ["derive"] }
serde_json = "1.0.96"
ureq = "2.6.2"
widestring = { version = "1.0.2", optional = true }
winreg = "0.52.0"
wmi = "0.13.3"

# Windows APIs - used only for COFF loading
windows = { version = "0.56.0", optional = true, features = [
    "Win32_Foundation",
    "Win32_System_Memory",
    "Win32_System_SystemServices",
    "Win32_System_LibraryLoader",
    "Win32_System_Threading",
    "Win32_Security",
    "Win32_System_Diagnostics_Debug",
] }

# Windows API pure definitions - preferred throughout Nimplant codebase
windows-sys = { version = "0.52.0", features = [
    "Wdk_Foundation",
    "Wdk_System_SystemServices",
    "Win32_Foundation",
    "Win32_Graphics_Gdi",
    "Win32_Security",
    "Win32_System_Console",
    "Win32_System_Diagnostics_ToolHelp",
    "Win32_System_Memory",
    "Win32_System_Services",
    "Win32_System_SystemInformation",
    "Win32_System_SystemServices",
    "Win32_System_Threading",
    "Win32_System_WindowsProgramming",
    "Win32_UI_WindowsAndMessaging",
] }
