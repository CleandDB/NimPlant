name: Test NimPlant builds

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code into workspace directory
        uses: actions/checkout@v4

      - name: Build Docker container
        run: docker build . -t nimplant

      - name: Save Docker image
        run: |
          docker save nimplant:latest | gzip > nimplant.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: nimplant-image
          path: nimplant.tar.gz

  test-builds:
    needs: build-container
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        include:
          - language: "nim"
            paths: ./client/bin/NimPlant.exe, ./client/bin/NimPlant.dll, ./client/bin/NimPlant.bin, ./client/bin/NimPlant-selfdelete.exe
          - language: "rust"
            paths: ./client-rs/bin/nimplant.bin, ./client-rs/bin/nimplant.dll, ./client-rs/bin/nimplant.exe, ./client-rs/bin/nimplant-selfdelete.exe
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code into workspace directory
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: nimplant-image

      - name: Load Docker image
        run: |
          gunzip -c nimplant.tar.gz | docker load

      - name: Copy example configuration
        run: cp config.toml.example config.toml

      - name: Compile binaries using Docker
        run: docker run -v ${PWD}:/nimplant nimplant /bin/bash -c "python3 ./nimplant.py compile all ${{ matrix.language }}"

      - name: Check if all files compiled correctly for ${{ matrix.language }}
        uses: andstor/file-existence-action@v3
        with:
          fail: true
          files: ${{ matrix.paths }}
